{"version":3,"sources":["components/farmingTable/FarmingTable.jsx"],"names":["utils","harvest","TableContainer","styled","div","props","theme","style","mainBorder","panelBoxShadow","primaryFontColor","lightBackground","scrollBarColor","fonts","contentFont","headerFont","MainTableInner","MainTableRow","MainTableHeader","columns","name","selector","data","isActive","toString","compact","sortable","noAssetColumns","center","noAssetData","id","asset","FarmingTable","state","setState","darkTheme","lightTheme","display","summaries","length","noHeader","noDivider","noDataComponent","map","col","i","key","prettyPosition","summary","index","address","className","String","onClick","reward","earnedRewards","minimumHarvestAmount","parseFloat","toFixed","historicalRewards","stakedBalance","percentOfPool","unstakedBalance","usdValueOf"],"mappings":"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","file":"static/js/4.0d39d521.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport harvest from \"../../lib/index\";\nimport { darkTheme, lightTheme, fonts } from \"../../styles/appStyles\";\n\nimport FarmTableSkeleton from \"./FarmTableSkeleton\";\n\nconst { utils } = harvest;\n\nconst TableContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 90%:\n  padding-bottom: 3rem;\n  border: ${(props) => props.theme.style.mainBorder};\n  box-shadow: ${(props) => props.theme.style.panelBoxShadow};\n  color: ${(props) => props.theme.style.primaryFontColor};\n  background-color: ${(props) => props.theme.style.lightBackground};\n  border-radius: .5rem;\n\n  div[role=\"table\"] {\n    width: 99%;\n    height: 100%\n    background-color: ${(props) => props.theme.style.lightBackground}\n    padding: .35rem;\n    \n    scrollbar-width: thin;\n    scrollbar-color: ${(props) => props.theme.style.scrollBarColor} ${(props) =>\n  props.theme.style.lightBackground} ;\n    ::-webkit-scrollbar {\n      width: .1rem;\n    }\n}\n\n.rdt_TableHeadRow {\n    \n  border-bottom: ${(props) => props.theme.style.mainBorder};\n  box-shadow: ${(props) => props.theme.style.panelBoxShadow};\n  background-color: ${(props) => props.theme.style.lightBackground};\n  border-top-right-radius: 0.5rem;\n  border-top-left-radius: 0.5rem;\n}\n\n.rdt_TableBody {\n  box-shadow: ${(props) => props.theme.style.panelBoxShadow};\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  border-bottom-left-radius: .5rem;\n  border-bottom-right-radius: .5rem;\n\n}\n\n.rdt_TableRow {\n  background-color: ${(props) => props.theme.style.lightBackground};\n  font-family: ${fonts.contentFont};\n  color: ${(props) => props.theme.style.primaryFontColor};\n  font-size: 1.5rem;\n  \n  @media(max-width: 1090px) {\n    font-size: 1.2rem;\n    \n  }\n  @media(max-width: 760px) {\n    font-size: 1.5rem;\n    \n  }\n  @media(max-width: 330px) {\n    font-size: .9rem;\n  }\n}\n\ndiv[role=\"columnheader\"] {\n  color: ${(props) => props.theme.style.primaryFontColor};\n  background-color: ${(props) => props.theme.style.lightBackground};\n  font-family: ${fonts.headerFont};\n  font-size: 1.7rem;\n  letter-spacing: -1.5px;\n\n  \n  \n\n  &:hover,\n  &:visited,\n  &:active,\n  &:focus {\n    color: ${(props) => props.theme.style.primaryFontColor};\n  }\n}\n  \n\n  \n\n\n\n  \n`;\n\nconst MainTableInner = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  overflow-x: scroll;\n  scrollbar-color: ${(props) => props.theme.style.scrollBarColor}\n    ${(props) => props.theme.style.lightBackground};\n  scrollbar-width: thin;\n  ::-webkit-scrollbar {\n    width: 100%;\n    height: 0.8rem;\n    margin-top: -1.8rem;\n  }\n  ::-webkit-scrollbar-track:no-button {\n    width: 100%;\n    border-radius: 0.5rem;\n    background-color: ${(props) => props.theme.style.lightBackground};\n  }\n  ::-webkit-scrollbar-button {\n    color: ${(props) => props.theme.style.primaryFontColor};\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background-color: black;\n    background-color: ${(props) => props.theme.style.scrollBarColor};\n  }\n`;\nconst MainTableRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.5fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  font-size: 1.7rem;\n  font-family: ${fonts.contentFont};\n  padding: 1.5rem 1rem;\n  width: 100%;\n  border-bottom: 1.2px solid rgba(53, 53, 53, 0.15);\n  @media (max-width: 1100px) {\n    width: 120%;\n  }\n  @media (max-width: 800px) {\n    width: 150%;\n  }\n  @media (max-width: 700px) {\n    width: 200%;\n  }\n  @media (max-width: 510px) {\n    width: 350%;\n  }\n\n  div {\n    min-width: 5rem;\n  }\n  .active {\n    margin-left: 2rem;\n  }\n  .rewards {\n    cursor: pointer;\n  }\n  .pool {\n    margin-left: 2rem;\n  }\n  .unstaked {\n    margin-left: 1rem;\n  }\n  .value {\n    margin-left: 2rem;\n  }\n`;\nconst MainTableHeader = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.5fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  grid-gap: 20px;\n  font-size: 2rem;\n  font-family: ${fonts.headerFont};\n  padding: 1.5rem 1rem;\n  border-bottom: 2px black solid;\n  width: 100%;\n  @media (max-width: 1100px) {\n    width: 120%;\n  }\n  @media (max-width: 800px) {\n    width: 150%;\n  }\n  @media (max-width: 700px) {\n    width: 200%;\n  }\n  @media (max-width: 510px) {\n    width: 350%;\n  }\n\n  p {\n    min-width: 5rem;\n  }\n`;\n// const StyledTableHeader = styled(TableHeader)`\n//   display: grid;\n//   padding: 24px 15px;\n//   border-bottom: 1px solid #e5e7eb;\n//   font-size: 13px;\n//   text-align: left;\n// `;\n\nconst columns = [\n  {\n    name: \"Pool\",\n    selector: \"name\",\n  },\n  {\n    name: \"Earns?\",\n    selector: (data) => data.isActive.toString(),\n    compact: true,\n  },\n  {\n    name: \"Claimable\",\n    selector: \"earnedRewards\",\n    compact: true,\n  },\n  {\n    name: \"To-Date\",\n    selector: \"\",\n    compact: true,\n  },\n  {\n    name: \"Staked\",\n    selector: \"stakedBalance\",\n    compact: true,\n  },\n  {\n    name: \"Pool%\",\n    selector: \"percentOfPool\",\n    compact: true,\n  },\n  {\n    name: \"Unstaked\",\n    selector: \"unstakedBalance\",\n    compact: true,\n  },\n  {\n    name: \"Value\",\n    selector: \"usdValueOf\",\n    sortable: true,\n    compact: true,\n  },\n];\n\nconst noAssetColumns = [\n  {\n    name: \"You currently are not staking any assets\",\n    // selector: (data) => data.asset.name,\n    selector: \"asset\",\n    center: true,\n  },\n];\nconst noAssetData = [\n  {\n    id: 0,\n    asset: \"Stake assets to get started\",\n    center: true,\n  },\n];\n\nconst FarmingTable = ({ state, setState }) => {\n  const getThisReward = (reward) => {\n    setState({ ...state, minimumHarvestAmount: reward });\n  };\n\n  return (\n    <ThemeProvider theme={state.theme === \"dark\" ? darkTheme : lightTheme}>\n      {state.display ? (\n        <TableContainer>\n          {state.summaries.length === 0 ? (\n            <DataTable\n              noHeader={true}\n              noDivider={true}\n              columns={noAssetColumns}\n              noDataComponent={false}\n              data={noAssetData}\n            />\n          ) : (\n            <MainTableInner>\n              <MainTableHeader>\n                {columns.map((col, i) => {\n                  return <p key={i}>{col.name}</p>;\n                })}\n              </MainTableHeader>\n              {state.summaries\n                .map(utils.prettyPosition)\n                .map((summary, index) => (\n                  <MainTableRow key={summary.address}>\n                    <div>{summary.name}</div>\n                    <div className=\"active\">{String(summary.isActive)}</div>\n                    <div\n                      className=\"rewards\"\n                      onClick={() => getThisReward(summary.earnedRewards)}\n                    >\n                      {parseFloat(summary.earnedRewards).toFixed(8)}\n                    </div>\n                    <div className=\"rewardsToDate\">\n                      {parseFloat(summary.historicalRewards).toFixed(8)}\n                    </div>\n                    <div>{parseFloat(summary.stakedBalance).toFixed(10)}</div>\n                    <div className=\"pool\">{summary.percentOfPool}</div>\n                    <div className=\"unstaked\">\n                      {parseFloat(summary.unstakedBalance).toFixed(10)}\n                    </div>\n                    <div className=\"value\">{summary.usdValueOf}</div>\n                  </MainTableRow>\n                ))}\n            </MainTableInner>\n          )}\n        </TableContainer>\n      ) : (\n        <FarmTableSkeleton state={state} />\n      )}\n    </ThemeProvider>\n  );\n};\n\nexport default FarmingTable;\n"],"sourceRoot":""}